name: build and deploy

on:
  workflow_dispatch:
    inputs:
      data:
        description: "data"
        required: true
        default: "null"
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: bip
          POSTGRES_PASSWORD: Production_123
          POSTGRES_DB: db
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: init data
        run: |
          echo "WIBU_DATA=${{ secrets.WIBU_GIT_TOKEN }}[x]${{ secrets.FIREBASE }}[x]${{ inputs.data }}" > $GITHUB_ENV

      - name: run install
        run: |
          bun install
          bun add .

      # === data app
      # WIBU_NAME
      # WIBU_APP_VERSION
      # WIBU_NAMESPACE
      # WIBU_REPO
      # WIBU_BRANCH
      # WIBU_ENV
      # WIBU_DATE
      - name: init data
        run: |
          echo "init data ..." | bun notif --data ${{ env.WIBU_DATA }} --type RUN
          echo "$(bun input-data --data ${{ env.WIBU_DATA }})" >> $GITHUB_ENV
          echo "init data selesai ..." | bun notif --data ${{ env.WIBU_DATA }} --type SUCCESS

      - name: clone
        run: |
          echo "clone project ..." | bun notif --data ${{ env.WIBU_DATA }} --type RUN
          git clone https://x-access-token:${{ secrets.WIBU_GIT_TOKEN }}@github.com/bipproduction/${{ env.WIBU_REPO }}.git ${{ env.WIBU_APP_VERSION }} 2>&1 | bun notif --data ${{ env.WIBU_DATA }}  
          echo "clone project ..." | bun notif --data ${{ env.WIBU_DATA }} --type SUCCESS

      - name: handle env
        working-directory: ${{ env.WIBU_APP_VERSION }}
        run: |
          echo "handle env ..." | bun notif --data ${{ env.WIBU_DATA }} --type RUN
          echo "${{ env.WIBU_ENV }}" > .env
          echo "handle env ..." | bun notif --data ${{ env.WIBU_DATA }} --type SUCCESS

      # - name: clone and build
      #   run: |
      #     echo "clone and build ..." | bun notif
      #     bun run build.ts

      # - name: Deploy to VPS (New Version)
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USER }}
      #     key: ${{ secrets.VPS_KEY }}
      #     source: "${{ env.DIR_SOURCE }}"
      #     target: "${{ env.DIR_TARGET }}"

      # - name: deploy env to server
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USER }}
      #     key: ${{ secrets.VPS_KEY }}
      #     source: "${{ env.DIR_SOURCE }}/.env"
      #     target: "${{ env.DIR_TARGET_PROJECT }}"

      # - name: manage install on server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USER }}
      #     key: ${{ secrets.VPS_KEY }}
      #     script: |
      #       echo "manage install on server ..." | bun notif
      #       cd ${{ env.DIR_TARGET_PROJECT }}
      #       bun install --production

      - name: finish
        if: always()
        run: |
          echo "FINISH !" | bun notif --data ${{ env.WIBU_DATA }}
