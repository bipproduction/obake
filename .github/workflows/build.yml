name: build and deploy

on:
  workflow_dispatch:
    inputs:
      data:
        description: "data"
        required: true
        default: "null"
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: bip
          POSTGRES_PASSWORD: Production_123
          POSTGRES_DB: db
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: run bun install workspace
        run: bun install

      - name: Handle env
        run: |
          echo "WIBU_NAME=${{ fromJson(inputs.data).name }}" >> $GITHUB_ENV
          echo "WIBU_NAMESPACE=${{ fromJson(inputs.data).namespace }}" >> $GITHUB_ENV
          echo "WIBU_REPO=${{ fromJson(inputs.data).repo }}" >> $GITHUB_ENV
          echo "WIBU_BRANCH=${{ fromJson(inputs.data).branch }}" >> $GITHUB_ENV
          echo "WIBU_DATE=${{ fromJson(inputs.data).date }}" >> $GITHUB_ENV
          echo "WIBU_APP_VERSION=${{ fromJson(inputs.data).appVersion }}" >> $GITHUB_ENV
          echo "WIBU_SOURCE_DIR=${{ github.workspace }}/${{fromJson(inputs.data).appVersion}}" >> $GITHUB_ENV
          echo "WIBU_TARGET_PROJECT_DIR=/var/www/projects/${{ fromJson(inputs.data).name }}/${{ fromJson(inputs.data).namespace }}" >> $GITHUB_ENV
          echo "WIBU_TARGET_RELEASES_DIR=/var/www/releases/${{ fromJson(inputs.data).name }}/${{ fromJson(inputs.data).namespace }}/releases" >> $GITHUB_ENV
          echo "WIBU_TARGET_WORKER_DIR=/var/www/releases/${{ fromJson(inputs.data).name }}/${{ fromJson(inputs.data).namespace }}/releases/${{fromJson(inputs.data).appVersion}}" >> $GITHUB_ENV

          cat <<EOF > .env.wibu.app
          ${{ fromJson(inputs.data).env }}
          EOF

          cat <<EOF > ./id_rsa
          ${{ secrets.VPS_KEY }}
          EOF

          chmod 600 ./id_rsa

      - name: clone project
        run: git clone --branch ${{ env.WIBU_BRANCH }} https://x-access-token:${{ secrets.WIBU_GIT_TOKEN }}@github.com/bipproduction/${{ env.WIBU_REPO }}.git ${{ env.WIBU_APP_VERSION }}

      - name: handle .env
        working-directory: ${{ env.WIBU_APP_VERSION }}
        run: echo '${{ fromJson(inputs.data).env }}' > .env

      - name: bun install on source
        working-directory: ${{ env.WIBU_APP_VERSION }}
        run: bun install

      - name: db push
        working-directory: ${{ env.WIBU_APP_VERSION }}
        run: bunx prisma db push

      - name: db seed
        continue-on-error: true
        working-directory: ${{ env.WIBU_APP_VERSION }}
        run: bunx prisma db seed

      - name: build
        working-directory: ${{ env.WIBU_APP_VERSION }}
        run: bun run build

      - name: remove node_modules
        working-directory: ${{ env.WIBU_APP_VERSION }}
        run: rm -r node_modules

      - name: mkdir target releases
        run: |
           ssh -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
           "mkdir -p ${{env.WIBU_TARGET_WORKER_DIR}}"

      - name: Send data source to server
        run: |
          scp -o StrictHostKeyChecking=no -i ./id_rsa -r ${{env.WIBU_SOURCE_DIR}} ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:${{env.WIBU_TARGET_WORKER_DIR}}
      
      - name: install adn db push on project
        run: |
          ssh -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          "cd ${{env.WIBU_TARGET_}} && bun install && bunx prisma db push"

      - name: seed on project
        run:  |
          ssh -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          "cd ${{env.WIBU_TARGET_}} && bunx prisma db seed"