name: build and deploy

on:
  workflow_dispatch:
    inputs:
      data:
        description: "env"
        required: true
        default: "null"

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: bip
          POSTGRES_PASSWORD: Production_123
          POSTGRES_DB: db
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: run install
        run: bun install

      - name: clone and build
        run: |
          bun run index.ts --data ${{ inputs.data }} --key ${{ secrets.WIBU_GIT_TOKEN }}
          
      ## Data App    
      # DATA_NAME
      # DATA_APP_VERSION
      # DATA_NAMESPACE
      # DATA_REPO
      # DATA_BRANCH
      # DATA_ENV
      # DATA_DATE
      - name: manage data app
        run: |
          echo "$(cat data-upload.txt)" >> $GITHUB_ENV
            
      ## Data Upload
      # DIR_SOURCE
      # DIR_TARGET
      - name: set data upload
        run: |
          echo "$(cat data-upload.txt)" >> $GITHUB_ENV

      # Deploy to a new version directory
      - name: Deploy to VPS (New Version)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          source: "${{ env.DIR_SOURCE }}"
          target: "${{ env.DIR_TARGET }}"

      # Deploy env
      - name: Deploy to VPS (New Version)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          source: "${{ env.DIR_SOURCE }}/.env"
          target: "${{ env.DIR_TARGET_PROJECT }}"
      
      - name: manage install on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            cd ${{ env.DIR_TARGET_PROJECT }}
            bun install --production
            
